export const operands = {
  "1": { "key": "ADD", "format": "(%(arg1)s)+(%(arg2)s)" },
  "2": { "key": "AGGM", "format": "dogma.AddGangGroupModifier(env,%(arg1)s, %(arg2)s)" },
  "3": { "key": "AGIM", "format": "dogma.AddGangShipModifier(env,%(arg1)s, %(arg2)s)" },
  "4": { "key": "AGORSM", "format": "dogma.AddGangOwnerRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "5": { "key": "AGRSM", "format": "dogma.AddGangRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "6": { "key": "AIM", "format": "dogma.AddItemModifier(env,%(arg1)s, %(arg2)s)" },
  "7": { "key": "ALGM", "format": "dogma.AddLocationGroupModifier(env,%(arg1)s, %(arg2)s)" },
  "8": { "key": "ALM", "format": "dogma.AddLocationModifier(env,%(arg1)s, %(arg2)s)" },
  "9": { "key": "ALRSM", "format": "dogma.AddLocationRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "10": { "key": "AND", "format": "(%(arg1)s and %(arg2)s)" },
  "11": { "key": "AORSM", "format": "dogma.AddOwnerRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "12": { "key": "ATT", "format": "(%(arg1)s, %(arg2)s)" },
  "13": { "key": "ATTACK", "format": "Attack(env, %(arg1)s, %(arg2)s)" },
  "14": { "key": "CARGOSCAN", "format": "CargoScan(env, None, None)" },
  "15": { "key": "CHEATTELEDOCK", "format": "CheatTeleDock(env, None, None)" },
  "16": { "key": "CHEATTELEGATE", "format": "dogma.CheatTeleGate(env, None, None)" },
  "17": { "key": "COMBINE", "format": "%(arg1)s\\r\\n%(arg2)s" },
  "18": { "key": "DEC", "format": " " },
  "19": { "key": "DECLOAKWAVE", "format": "DecloakWave(env, None, None)" },
  "20": { "key": "DECN", "format": " " },
  "21": { "key": "DEFASSOCIATION", "format": "const.dgmAss%(value)s" },
  "22": { "key": "DEFATTRIBUTE", "format": "%(value)s" },
  "23": { "key": "DEFBOOL", "format": "%(value)s" },
  "24": { "key": "DEFENVIDX", "format": "env[const.dgmEnv%(value)s]" },
  "25": { "key": "DEFFLOAT", "format": " " },
  "26": { "key": "DEFGROUP", "format": " " },
  "27": { "key": "DEFINT", "format": "%(value)s" },
  "28": { "key": "DEFSTRING", "format": "\\"%(value)s\\"" },
  "29": { "key": "DEFTYPEID", "format": " " },
  "30": { "key": "ECMBURST", "format": "dogma.ECMBurst(env, None, None)" },
  "31": { "key": "EFF", "format": "(%(arg1)s, %(arg2)s)" },
  "32": { "key": "EMPWAVE", "format": "EMPWave(env, None, None)" },
  "33": { "key": "EQ", "format": "(%(arg1)s == %(arg2)s)" },
  "34": { "key": "GA", "format": "(%(arg1)s, %(arg2)s)" },
  "35": { "key": "GET", "format": "dogmaLM.GetAttributeValue(%(arg1)s, %(arg2)s)" },
  "36": { "key": "GETTYPE", "format": "env.itemTypeID" },
  "37": { "key": "GM", "format": "dogma.GetModule(env,%(arg1)s,%(arg2)s)" },
  "38": { "key": "GT", "format": "(%(arg1)s > %(arg2)s)" },
  "39": { "key": "GTE", "format": "(%(arg1)s >= %(arg2)s)" },
  "40": { "key": "IA", "format": "%(arg1)s" },
  "41": { "key": "IF", "format": "if %(arg1)s:\\r\\n %(arg2)s" },
  "42": { "key": "INC", "format": "<handled in code>" },
  "43": { "key": "INCN", "format": " " },
  "44": { "key": "LAUNCH", "format": "dogma.Launch(env, None, None)" },
  "45": { "key": "LAUNCHDEFENDERMISSILE", "format": "dogma.LaunchDefenderMissile(env, None, None)" },
  "46": { "key": "LAUNCHDRONE", "format": "dogma.Launch(env, None, None)" },
  "47": { "key": "LAUNCHFOFMISSILE", "format": "dogma.LaunchFOFMissile(env, None, None)" },
  "48": { "key": "LG", "format": "(%(arg1)s, %(arg2)s)" },
  "49": { "key": "LS", "format": "(%(arg1)s, %(arg2)s)" },
  "50": { "key": "MINE", "format": "Mine(env, None, None)" },
  "51": { "key": "MUL", "format": "(%(arg1)s * %(arg2)s)" },
  "52": { "key": "OR", "format": "(%(arg1)s or %(arg2)s)" },
  "53": { "key": "POWERBOOST", "format": "dogma.PowerBoost(env, None, None)" },
  "54": { "key": "RGGM", "format": "dogma.RemoveGangGroupModifier(env,%(arg1)s, %(arg2)s)" },
  "55": { "key": "RGIM", "format": "dogma.RemoveGangShipModifier(env,%(arg1)s, %(arg2)s)" },
  "56": { "key": "RGORSM", "format": "dogma.RemoveGangOwnerRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "57": { "key": "RGRSM", "format": "dogma.RemoveGangRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "58": { "key": "RIM", "format": "dogma.RemoveItemModifier(env,%(arg1)s, %(arg2)s)" },
  "59": { "key": "RLGM", "format": "dogma.RemoveLocationGroupModifier(env,%(arg1)s, %(arg2)s)" },
  "60": { "key": "RLM", "format": "dogma.RemoveLocationModifier(env,%(arg1)s, %(arg2)s)" },
  "61": { "key": "RLRSM", "format": "dogma.RemoveLocationRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "62": { "key": "RORSM", "format": "dogma.RemoveOwnerRequiredSkillModifier(env,%(arg1)s, %(arg2)s)" },
  "63": { "key": "RS", "format": "dogma.RequireSkill(env, %(arg1)s, %(arg2)s)" },
  "64": { "key": "RSA", "format": "(%(arg1)s, %(arg2)s)" },
  "65": { "key": "SET", "format": "<handled in code>" },
  "66": { "key": "SHIPSCAN", "format": "ShipScan(env, None, None)" },
  "67": { "key": "SKILLCHECK", "format": "dogma.SkillCheck(env, %(arg1)s, %(arg2)s)" },
  "68": { "key": "SUB", "format": " " },
  "69": { "key": "SURVEYSCAN", "format": "SurveyScan(env, None, None)" },
  "70": { "key": "TARGETHOSTILES", "format": "dogma.TargetHostiles(env, None, None)" },
  "71": { "key": "TARGETSILENTLY", "format": "dogmaLM.AddTargetEx(shipID,targetID, silent=1, tasklet=1)" },
  "72": { "key": "TOOLTARGETSKILLS", "format": "dogma.CheckToolTargetSkills(env,None,None)" },
  "73": { "key": "UE", "format": "raise UserError(%(arg1)s)" },
  "74": { "key": "VERIFYTARGETGROUP", "format": "dogma.VerifyTargetGroup(env, None, None)" }
}; 