name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    # Set default working directory
    defaults:
      run:
        working-directory: EveAssistant
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
          - os: macos-latest
            platform: darwin
          - os: ubuntu-latest
            platform: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: EveAssistant/package-lock.json

      - name: Install system dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev
          sudo apt-get install -y build-essential

      - name: Install system dependencies (macOS)
        if: matrix.platform == 'darwin'
        run: |
          # Install python3 if needed
          which python3 || brew install python3

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native dependencies
        run: |
          npm rebuild
          npx @electron/rebuild

      - name: Build and publish to GitHub Releases
        run: |
          echo "Current directory: $(pwd)"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Contents of out directory before build:"
          ls -la out/ || echo "out/ directory does not exist"
          echo "Running npm run publish..."
          npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-forge:*

      - name: Build artifacts only (fallback)
        if: failure()
        run: |
          echo "Publish failed, trying make only..."
          npm run make
        continue-on-error: true

      - name: List build outputs
        if: always()
        run: |
          echo "Contents of out directory:"
          find out/ -type f -name "*.exe" -o -name "*.dmg" -o -name "*.deb" -o -name "*.rpm" -o -name "*.zip" || echo "No build outputs found"

      - name: Upload build artifacts (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}
          path: |
            EveAssistant/out/make/**/*
            !EveAssistant/out/make/**/*.map
        continue-on-error: true 